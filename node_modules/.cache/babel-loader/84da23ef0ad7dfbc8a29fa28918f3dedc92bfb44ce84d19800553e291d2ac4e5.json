{"ast":null,"code":"var _jsxFileName = \"/Users/Workflow/concrete-jungle-festival/src/components/Programmation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/Programmation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Programmation = () => {\n  _s();\n  const [concerts, setConcerts] = useState([]);\n  const [sortBy, setSortBy] = useState('date'); // État pour suivre le choix de tri\n\n  useEffect(() => {\n    // Utilisez une requête AJAX pour récupérer les événements depuis WordPress\n    fetch('http://localhost:8888/concrete-jungle-festival/wp-json/tribe/events/v1/events').then(response => response.json()).then(data => setConcerts(data.events)).catch(error => console.error('Erreur lors de la récupération des événements :', error));\n  }, []);\n\n  // Fonction de tri en fonction de la propriété choisie (date, heure, lieu)\n  const sortConcerts = property => {\n    const sortedConcerts = [...concerts].sort((a, b) => {\n      if (a[property] < b[property]) return -1;\n      if (a[property] > b[property]) return 1;\n      return 0;\n    });\n    setConcerts(sortedConcerts);\n  };\n\n  // Fonction de gestion du changement de choix de tri\n  const handleSortChange = event => {\n    setSortBy(event.target.value);\n    sortConcerts(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"programmation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"pt-3 pb-4 text-center display-5\",\n      children: \"PROGRAMMATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sortSelect\",\n        children: \"Trier par : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sortSelect\",\n        value: sortBy,\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"start_date\",\n          children: \"Heure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"venue.venue\",\n          children: \"Lieu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: concerts.map(concert => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: concert.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date et Heure: \", concert.start_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: concert.venue.venue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, concert.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Programmation, \"hxZN3pi2dQkZz8Xbjsfk2aJ6/vA=\");\n_c = Programmation;\nexport default Programmation;\nvar _c;\n$RefreshReg$(_c, \"Programmation\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Programmation","_s","concerts","setConcerts","sortBy","setSortBy","fetch","then","response","json","data","events","catch","error","console","sortConcerts","property","sortedConcerts","sort","a","b","handleSortChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","concert","Fragment","title","start_date","venue","_c","$RefreshReg$"],"sources":["/Users/Workflow/concrete-jungle-festival/src/components/Programmation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/Programmation.css';\n\nconst Programmation = () => {\n  const [concerts, setConcerts] = useState([]);\n  const [sortBy, setSortBy] = useState('date'); // État pour suivre le choix de tri\n\n  useEffect(() => {\n    // Utilisez une requête AJAX pour récupérer les événements depuis WordPress\n    fetch('http://localhost:8888/concrete-jungle-festival/wp-json/tribe/events/v1/events')\n      .then(response => response.json())\n      .then(data => setConcerts(data.events))\n      .catch(error => console.error('Erreur lors de la récupération des événements :', error));\n  }, []);\n\n  // Fonction de tri en fonction de la propriété choisie (date, heure, lieu)\n  const sortConcerts = (property) => {\n    const sortedConcerts = [...concerts].sort((a, b) => {\n      if (a[property] < b[property]) return -1;\n      if (a[property] > b[property]) return 1;\n      return 0;\n    });\n    setConcerts(sortedConcerts);\n  };\n\n  // Fonction de gestion du changement de choix de tri\n  const handleSortChange = (event) => {\n    setSortBy(event.target.value);\n    sortConcerts(event.target.value);\n  };\n\n  return (\n    <div className='programmation'>\n      <h2 className='pt-3 pb-4 text-center display-5'>PROGRAMMATION</h2>\n      <div className=\"sort-options\">\n        <label htmlFor=\"sortSelect\">Trier par : </label>\n        <select id=\"sortSelect\" value={sortBy} onChange={handleSortChange}>\n          <option value=\"date\">Date</option>\n          <option value=\"start_date\">Heure</option>\n          <option value=\"venue.venue\">Lieu</option>\n        </select>\n      </div>\n      <ul>\n        {concerts.map(concert => (\n          <React.Fragment key={concert.id}>\n            <li>\n              <h3>{concert.title}</h3>\n              <p>Date et Heure: {concert.start_date}</p>\n              <p>{concert.venue.venue}</p>\n            </li>\n            <hr />\n          </React.Fragment>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Programmation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}